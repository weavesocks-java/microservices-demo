apiVersion: coherence.oracle.com/v1
kind: CoherenceCluster
metadata:
  name: weavesocks
spec:
  replicas: 1
  imagePullSecrets:
    - coherence-k8s-operator-development-secret
    - ocr-k8s-operator-development-secret
  images:
    coherence:
      image: iad.ocir.io/odx-stateservice/test/coherence:14.1.1.0.0-b74839
    coherenceUtils:
      image: iad.ocir.io/odx-stateservice/test/oracle/coherence-operator:2.0.0-SNAPSHOT-utils
      imagePullPolicy: Always
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
  logging:
    configFile: logging.properties
  maxHeap: 256m
  javaOpts: "-Dcoherence.management.http=none -Dcoherence.metrics.http.enabled=false"
  resources:
    limits:
      cpu: 2
  roles:
    - role: carts
      images:
        userArtifacts:
          image: weavesocks/carts:1.0.0
          imagePullPolicy: Always
      ports:
        - name: http
          port: 7001
          service:
            name: carts
            port: 80
    - role: catalogue
      images:
        userArtifacts:
          image: weavesocks/catalogue:1.0.0
          imagePullPolicy: Always
      ports:
        - name: http
          port: 7001
          service:
            name: catalogue
            port: 80
    - role: payment
      images:
        userArtifacts:
          image: weavesocks/payment:1.0.0
          imagePullPolicy: Always
      ports:
        - name: http
          port: 7001
          service:
            name: payment
            port: 80
    - role: shipping
      images:
        userArtifacts:
          image: weavesocks/shipping:1.0.0
          imagePullPolicy: Always
      ports:
        - name: http
          port: 7001
          service:
            name: shipping
            port: 80
    - role: orders
      images:
        userArtifacts:
          image: weavesocks/orders:1.0.0
          imagePullPolicy: Always
      ports:
        - name: http
          port: 7001
          service:
            name: orders
            port: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: front-end
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: front-end
    spec:
      containers:
      - name: front-end
        image: weaveworksdemos/front-end:0.3.12
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8079
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
          readOnlyRootFilesystem: true
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    name: front-end
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8079
  selector:
    name: front-end
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user-db
  labels:
    name: user-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
      - name: user-db
        image: weaveworksdemos/user-db:0.4.0
        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  labels:
    name: user-db
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: user-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user
  labels:
    name: user
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user
    spec:
      containers:
      - name: user
        image: weaveworksdemos/user:0.4.7
        ports:
        - containerPort: 80
        env:
        - name: MONGO_HOST
          value: user-db:27017
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    name: user
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: user
